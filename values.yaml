# Default values for tpl.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: kafka

# -- Type Statefulset 
statefulset: true

# -- Persistence only type statefulset
persistence: 
 enabled: true
 volumeClaimTemplates:
   - name: zookeeper-storage
     accessModes: [ "ReadWriteOnce" ]
     #storageClassName: gp3
     resources:
       requests:
         storage: 1Gi

# -- Statefulset strategy
UpdateStrategy:
   # -- OnDelete 
   type: RollingUpdate

image:
  # -- The Docker registry
  registry: docker.io
  # -- Docker image repository
  repository: wurstmeister/zookeeper
  # -- Image pull policy 
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# -- Image pull secrets
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Define command to be executed by zookeeper container at startup
command: []
# command: ["./start.sh"]

# -- Define additional args if command is used
args: []
# args: ["app.jar"]
# -- Deployment and Statefulset labels
labels: {}
# app.kubernetes.io/name: app

# -- Extra environment variables passed to pods
extraEnvs: []
      
# -- Allows you to load environment variables from kubernetes secret or config map
envFrom: []
# - configMapRef:
#     name: config-map

# -- Pod annotations
podAnnotations: {}
# app.kubernetes.io/name: app

# -- Pod labels
podLabels: {}
# app.kubernetes.io/name: app

# -- Deployment strategy
Strategy: 
   rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
   type: RollingUpdate

# -- Pod securityContext
podSecurityContext: {}
## fsGroup: 2000

# -- Deployment securityContext
securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  privileged: false

# -- Additional Container Ports
containerPorts:
  - name: zookeeper
    containerPort: 2181
    protocol: TCP

service:
  # -- Service annotations
  annotations: {}
  # -- Custom labels
  labels: {}
  
  # -- Kubernetes port where service is exposed
  servicePorts: 
    - name: zookeeper
      port: 2181
      targetPort: 2181
  
  # -- Kubernetes service type
  type: NodePort

# -- Additional configMap volume mounts
# -- Need to use ConfigMap without creating volume only main container
configMounts: []
  # - name: zookeeper-config
  #   configName: zookeeper-config
  #   path: /etc/zookeeper/conf.d

# -- Additional secret volume mounts
# -- Need to use Secrets without the need to create volume only main container
secretMounts: []
  # - name: certs
  #   secretName: secrets-names
  #   path: /usr/share/config/certs

# -- Create Secrets
# -- Using Secrets there is no need to create volumes in the main container only
Secrets: {}
    # secrets: xxxxxxxxxxxxxxxxx 
    # zookeeper.properties: |
    #    server {
    #        dataDir=/data

# -- Create configmap 
# -- Using ConfigMap it is not necessary to create volumes, only for the main container
ConfigMap: {}
    # zookeeper.properties: |
    #    server {
    #        dataDir=/data

# -- Additional volume mounts
extraVolumeMounts:
  - name: zookeeper-storage
    mountPath: /data

# -- Additional volumes
extraVolumes: []
  # - name: zookeeper-storage
  #   emptyDir: {}

ingress:
  # -- Enable Ingress
  enabled: false
  # -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18
  ingressClassName: ""
  # -- Ingress annotations
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # alb.ingress.kubernetes.io/group.name: alb
  # -- Ingress accepted hostnames  
  hosts:
    - host: example.domain.io
      paths:
        - path: /
          pathType: Prefix
          number: 80
  # -- Ingress TLS configuration           
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Liveness and Readiness Probe settings
probe: {}
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: 80
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: 80
  #   initialDelaySeconds: 60
  #   timeoutSeconds: 30
  #   failureThreshold: 10

# -- CPU/Memory resource requests/limits
resources: {}
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- HPA settings
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}
 # node: application
# -- Toleration labels for pod assignment
tolerations: []
 # - key: "environment"
 #   operator: "Equal"
 #   value: "application"
 #   effect: "NoSchedule"
# -- Affinity settings for pod assignment
affinity: {}
 #  nodeAffinity:
 #    requiredDuringSchedulingIgnoredDuringExecution:
 #      nodeSelectorTerms:
 #      - matchExpressions:
 #        - key: disktype
 #          operator: In
 #          values:
 #          - ssd   

# -- Create cronjobs
CronJobs: []
  # - name: hello
  #   labels:
  #     app: hello
  #   image:
  #     repository: busybox
  #     tag: latest
  #     imagePullPolicy: IfNotPresent
  #   schedule: "* * * * *"
  #   failedJobsHistoryLimit: 1
  #   successfulJobsHistoryLimit: 3
  #   concurrencyPolicy: Allow
  #   restartPolicy: Never
  #   args: ["/bin/sh", "-c", "echo Hello Kubernetes Jobs!"]
  #   resources:
  #     limits:
  #       cpu: 100m
  #       memory: 100Mi
  #     requests:
  #       cpu: 100m
  #       memory: 100Mi
        
  # - name: hello2
  #   labels:
  #     app: hello2
  #   image:
  #     repository: busybox
  #     tag: latest
  #     imagePullPolicy: IfNotPresent
  #   schedule: "* * * * *"
  #   failedJobsHistoryLimit: 1
  #   successfulJobsHistoryLimit: 3
  #   concurrencyPolicy: Allow
  #   restartPolicy: Never
  #   args: ["/bin/sh", "-c", "echo Hello Kubernetes Jobs2!"]
  #   resources:
  #     limits:
  #       cpu: 100m
  #       memory: 100Mi
  #     requests:
  #       cpu: 100m
  #       memory: 100Mi

# -- Sidecar containers to add to the pod
extraContainers: []
  # - name: sidecar
  #   image: fluent/fluent-bit
  #   env:
  #    - name: FLUENT_ELASTICSEARCH_HOST
  #      value: "elastic.example.io"
  #    - name: FLUENT_ELASTICSEARCH_PORT
  #      value: "9200"
  #    - name: FLUENT_ELASTICSEARCH_USER
  #      value: elastic
  #    - name: FLUENT_ELASTICSEARCH_SCHEME
  #      value: "https"
  #    - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
  #      value: "false"
  #    - name: FLUENT_ELASTICSEARCH_PASSWORD
  #      value: changeme
  #   volumeMounts:
  #   - name: varlog
  #     mountPath: /var/log/nginx
  #   - name: fluent-bit-config
  #     mountPath: /fluent-bit/etc/
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

# -- Additional init containers
# ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
#
extraInitContainers: []
  # - name: sleepy
  #   image: alpine
  #   command: ['sleep', '60']

# -- Enable creating secrets
# -- Allows you to load environment variables from kubernetes secret or config map from envFrom, extraInitContainers and extraContainers
extraSecrets:
  enabled: false
  # name: extrasecret
  # data: 
  # SECRET: xxxxxxxxxxxxxxx
  # SECRET2: |
  #    [SERVICE]
  #         Daemon Off
  #         Flush 5           
  #    [INPUT]
  #         Name tail
  #         Path /var/log/nginx/*.log
  #         Tag kube.*
  #         Mem_Buf_Limit 300MB
  #         Skip_Long_Lines On
  #         Skip_Empty_Lines On 
  #    [OUTPUT]
  #         Name es
  #         Match *
  #         Host            ${FLUENT_ELASTICSEARCH_HOST}
  #         Port            ${FLUENT_ELASTICSEARCH_PORT}
  #         HTTP_User       ${FLUENT_ELASTICSEARCH_USER}
  #         HTTP_Passwd     ${FLUENT_ELASTICSEARCH_PASSWORD}
  #         Logstash_Format Off
  #         Retry_Limit False
  #         tls On
  #         tls.verify Off
  #         Suppress_Type_Name On
  #         Replace_Dots On
  #         Index nginx

# -- Enable creating configmap
# -- Allows you to load environment variables from kubernetes secret or config map from envFrom, extraInitContainers and extraContainers
extraConfigMap: 
    enabled: false
    # name: fluent-bit-config
    # data:
    #  CONFIGMAP: "xxxxxxxxxxxxxxxxxxxxxxxxxx"
    #  fluent-bit.conf: |
    #    [SERVICE]
    #        Daemon Off
    #        Flush 5           
    #    [INPUT]
    #        Name tail
    #        Path /var/log/nginx/*.log
    #        Tag kube.*
    #        Mem_Buf_Limit 300MB
    #        Skip_Long_Lines On
    #        Skip_Empty_Lines On 
    #    [OUTPUT]
    #        Name es
    #        Match *
    #        Host            ${FLUENT_ELASTICSEARCH_HOST}
    #        Port            ${FLUENT_ELASTICSEARCH_PORT}
    #        HTTP_User       ${FLUENT_ELASTICSEARCH_USER}
    #        HTTP_Passwd     ${FLUENT_ELASTICSEARCH_PASSWORD}
    #        Logstash_Format Off
    #        Retry_Limit False
    #        tls On
    #        tls.verify Off
    #        Suppress_Type_Name On
    #        Replace_Dots On
    #        Index nginx

